# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-17 02:59
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import picklefield.fields
import utils.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BMDAnalysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('subtype', models.CharField(choices=[(b'D', b'Dichotomous'), (b'C', b'Central tendency'), (b'H', b'Hybrid method (tails)')], default=b'D', max_length=1)),
                ('bmr', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('adversity_ct_type', models.CharField(choices=[(b'R', b'Relative'), (b'A', b'Absolute'), (b'C', b'Cutoff')], default=b'R', max_length=1)),
                ('adversity_hybrid_type', models.CharField(choices=[(b'P', b'Percentile'), (b'A', b'Absolute cutoff')], default=b'P', max_length=1)),
                ('adversity_value', models.FloatField(blank=True, null=True)),
                ('vectors', utils.models.PickledFileField(blank=True, null=True, upload_to=b'')),
                ('summary', picklefield.fields.PickledObjectField(blank=True, editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'get_latest_by': 'created',
                'verbose_name_plural': 'BMD analyses',
            },
        ),
        migrations.CreateModel(
            name='BMDAnalysisModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('prior_weight', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('vectors', utils.models.PickledFileField(blank=True, null=True, upload_to=b'')),
                ('summary', picklefield.fields.PickledObjectField(blank=True, editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='bbmdweb.BMDAnalysis')),
            ],
            options={
                'ordering': ('model__created',),
                'get_latest_by': 'created',
                'verbose_name_plural': 'BMD analyses models',
            },
        ),
        migrations.CreateModel(
            name='ModelSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('model_type', models.CharField(choices=[(b'DGa', b'Gamma'), (b'DLg', b'Logistic'), (b'DLl', b'LogLogistic'), (b'DPr', b'Probit'), (b'DLp', b'LogProbit'), (b'DM1', b'Quantal linear'), (b'DM2', b'Multistage (2nd order)'), (b'DWe', b'Weibull'), (b'DHi', b'Dichotomous Hill'), (b'CE2', b'Exponential 2'), (b'CE3', b'Exponential 3'), (b'CE4', b'Exponential 4'), (b'CE5', b'Exponential 5'), (b'CHi', b'Hill'), (b'CPw', b'Power'), (b'CMm', b'Michaelis Menten'), (b'CLi', b'Linear')], max_length=4)),
                ('pystan_version', models.CharField(blank=True, max_length=8)),
                ('power_lower_bound', models.CharField(choices=[(b'zero', 0.0), (b'qtr', 0.25), (b'pointFive', 0.5), (b'threeQtr', 0.75), (b'one', 1.0)], default=b'one', max_length=9)),
                ('predicted_pvalue', models.FloatField(null=True)),
                ('parameter_names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=5), null=True, size=10)),
                ('vectors', utils.models.PickledFileField(blank=True, null=True, upload_to=b'')),
                ('plotting', picklefield.fields.PickledObjectField(blank=True, editable=False)),
                ('parameter_correlation', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=10), null=True, size=10)),
                ('fit_summary', models.TextField(blank=True)),
                ('fit_summary_dict', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('model_weight_scaler', models.FloatField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('created',),
                'get_latest_by': 'created',
                'verbose_name_plural': 'Model settings',
            },
        ),
        migrations.CreateModel(
            name='Run',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=128)),
                ('data_type', models.CharField(choices=[(b'D', b'Dichotomous (summary)'), (b'E', b'Dichotomous (individual)'), (b'C', b'Continuous (summary)'), (b'I', b'Continuous (individual)')], default=b'D', max_length=2)),
                ('variance_type', models.CharField(choices=[(b'NA', b'Not applicable'), (b'SD', b'Standard deviation'), (b'SE', b'Standard error')], default=b'NA', max_length=2)),
                ('raw_data', models.TextField(blank=True, help_text=b"Paste dose-response data here, or manually type, using spaces between values. Headers are optional. To view example formats, see example formats <a href='/static/excel/dataTemplates.xlsx'>here</a>.", verbose_name=b'Dataset inputs')),
                ('dose', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), null=True, size=100)),
                ('n', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=100)),
                ('incidence', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=100)),
                ('response', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), null=True, size=100)),
                ('variance', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), null=True, size=100)),
                ('trend_z_test', models.FloatField(null=True)),
                ('trend_p_value', models.FloatField(null=True)),
                ('mcmc_iterations', models.PositiveIntegerField(default=30000, help_text=b'Length of each Markov chain (10,000 - 50,000)', validators=[django.core.validators.MinValueValidator(5000), django.core.validators.MaxValueValidator(50000)], verbose_name=b'MCMC iterations')),
                ('mcmc_num_chains', models.PositiveSmallIntegerField(default=1, help_text=b'Number of chains (1-3)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name=b'Number chains')),
                ('mcmc_warmup_percent', models.PositiveSmallIntegerField(default=50, help_text=b'Specify % of samples used as warmup; the remaining samples will be kept and used for analysis and statistical inference.', validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(90)], verbose_name=b'MCMC warmup (%)')),
                ('seed', models.PositiveIntegerField(help_text=b'Random integer (0-99,999)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99999)], verbose_name=b'Random seed')),
                ('public', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_updated'],
                'get_latest_by': 'created',
            },
        ),
        migrations.AddField(
            model_name='modelsettings',
            name='run',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='bbmdweb.Run'),
        ),
        migrations.AddField(
            model_name='bmdanalysismodel',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bmds', to='bbmdweb.ModelSettings'),
        ),
        migrations.AddField(
            model_name='bmdanalysis',
            name='run',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bmds', to='bbmdweb.Run'),
        ),
    ]
